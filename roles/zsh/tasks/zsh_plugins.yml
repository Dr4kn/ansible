---
# plugins
- name: Get current user
  command: whoami
  register: current_user
  changed_when: current_user.rc == 0

- block:
    # Autocompletions
    - name: Check if zsh-autosuggestions is installed
      stat:
        path: "/home/{{ current_user.stdout }}/.oh-my-zsh/custom/plugins/zsh-autosuggestions"
      register: suggestion_installed

    - name: Clone zsh-autosuggestions in zsh plugins folder
      git:
        repo: https://github.com/zsh-users/zsh-autosuggestions
        dest: "{{ item }}/.oh-my-zsh/custom/plugins/zsh-autosuggestions"
        version: master
        depth: 1
      with_items:
        - "/home/{{ current_user.stdout }}"
        - /root
      when: suggestion_installed.stat.islnk is not defined
      changed_when: suggestion_installed.stat.islnk is not defined

    - name: Check if  zsh-autocomplete is installed
      stat:
        path: "/home/{{ current_user.stdout }}/.oh-my-zsh/custom/plugins/zsh-autocomplete"
      register: autocomplete

    - name: Clone zsh-autocomplete in zsh plugins folder
      git:
        repo: https://github.com/marlonrichert/zsh-autocomplete.git
        dest: "{{ item }}/.oh-my-zsh/custom/plugins/zsh-autocomplete"
        version: main
        depth: 1
      with_items:
        - "/home/{{ current_user.stdout }}"
        - /root
      when: autocomplete.stat.islnk is not defined
      changed_when: autocomplete.stat.islnk is not defined

    # Syntax Highlighting
    - name: Check if syntax-highlighting is installed
      stat:
        path: "/home/{{ current_user.stdout }}/.oh-my-zsh/custom/plugins/syntax-highlighting"
      register: syntax

    - name: Clone zsh-syntax-highlighting in zsh plugins folder
      git:
        repo: https://github.com/zsh-users/zsh-syntax-highlighting

        dest: "{{ item }}/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting"
        version: master
        depth: 1
      with_items:
        - "/home/{{ current_user.stdout }}"
        - /root
      when: syntax.stat.islnk is not defined
      changed_when: syntax.stat.islnk is not defined

    - name: Check if  fast-syntax-highlighting is installed
      stat:
        path: "/home/{{ current_user.stdout }}/.oh-my-zsh/custom/plugins/fast-syntax-highlighting"
      register: fast_syntax_highlighting

    - name: Clone fast-syntax-highlighting in zsh plugins folder
      git:
        repo: https://github.com/zdharma-continuum/fast-syntax-highlighting.git
        dest: "{{ item }}/.oh-my-zsh/custom/plugins/fast-syntax-highlighting"
        version: master
        depth: 1
      with_items:
        - "/home/{{ current_user.stdout }}"
        - /root
      when: fast_syntax_highlighting.stat.islnk is not defined
      changed_when: fast_syntax_highlighting.stat.islnk is not defined

    # Better Directories
    - name: Check if k is installed
      stat:
        path: "/home/{{ current_user.stdout }}/.oh-my-zsh/custom/plugins/k"
      register: k_installed

    - name: Clone k in zsh plugins folder
      git:
        repo: https://github.com/supercrabtree/k
        dest: "{{ item }}/.oh-my-zsh/custom/plugins/k"
        version: master
        depth: 1
      with_items:
        - "/home/{{ current_user.stdout }}"
        - /root
      when: k.stat.islnk is not defined
      changed_when: k.stat.islnk is not defined

    # Themes
    - name: Check if powerlevel10k is installed
      stat:
        path: "/home/{{ current_user.stdout }}/.oh-my-zsh/custom/themes/powerlevel10k"
      register: p10k

    - name: Clone powerlevel10k in zsh plugins folder
      git:
        repo: https://github.com/romkatv/powerlevel10k
        dest: "{{ item }}/.oh-my-zsh/custom/themes/powerlevel10k"
        version: master
        depth: 1
      with_items:
        - "/home/{{ current_user.stdout }}"
        - /root
      when: p10k.stat.islnk is not defined
      changed_when: p10k.stat.islnk is not defined

    - name: Add zsh config files
      copy:
        src: .p10k.zsh
        dest: "{{ item  }}/.p10k.zsh"
        mode: 0644
      with_items:
        - "/home/{{ current_user.stdout }}"
        - /root
  become: true
